{"version":3,"sources":["utils/app.apis.js","constants/home.constants.js","components/user.component.js","components/search.component.js","components/list.component.js","components/detail.component.js","components/add.component.js","components/lineitem.component.js","containers/home.component.js","actions/home.actions.js","routes/app.routes.js","containers/app.component.js","reducers/home.reducer.js","reducers/app.reducer.js","store/app.store.js","index.js"],"names":["Http_Get","url","fetch","Http_Post","data","method","body","JSON","stringify","headers","Content-Type","HOME_API_URL","API_URL","UPDATE_ORDER","UserComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","customerName","react_default","a","createElement","className","Component","SearchComponent","handleChange","e","setState","search","target","value","triggerSearch","preventDefault","searchOrder","_this2","onSubmit","type","placeholder","onChange","alt","src","ListComponent","react_table_es","orders","columns","Header","accessor","style","height","showPagination","getTrProps","rowInfo","row","onClick","selectOrder","original","background","ordernumber","selectedOrder","color","DetailComponent","removeLineItem","event","item","RemoveLineItems","editLineItem","EditLineItems","editItemUnits","UpdateLineUnits","saveLineUnits","SaveLineUnits","lineItems","map","index","key","editMode","id","uom","disabled","cost","unit","rows","desc","AddComponent","updateSearchLine","searchLine","triggerLineSearch","searchLineItems","toggleSelectLine","selected","UnSelectLineItems","selectedLines","SelectLineItems","LineItemComponent","toggleLineItemMode","mode","lineItemMode","detail_component","add_component","HomeComponent","getFilteredList","searchText","filter","order","toUpperCase","startsWith","getFilteredLineList","line","SaveLineItems","ToggleLineItemMode","RequestOrders","RequestLineItems","user_component","search_component","SearchOrder","list_component","SelectOrder","lineitem_component","SearchLineItems","connect","objectSpread","homeState","componentState","dispatch","then","response","json","myJson","error","concat","success","productid","history","createBrowserHistory","AppRoutes","Router","Switch","Route","path","component","AppComponent","HomeReducer","combineReducers","arguments","length","undefined","action","updatedOrder","lines","orderLines","i","selectedItem","toConsumableArray","editLineItems","updateLineItems","AppReducer","middleware","thunk","AppStore","createStore","applyMiddleware","apply","store","render","es","containers_app_component","document","getElementById"],"mappings":"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","file":"static/js/main.3d3bf90b.chunk.js","sourcesContent":["export const Http_Get = (url) => fetch(url)\r\n\r\nexport const Http_Post = (url, data) =>fetch(url, {\r\n  method: \"POST\",\r\n  body: JSON.stringify(data),\r\n  headers: {\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n})","import API_URL from './app.constants'\r\n\r\nconst HOME_API_URL = API_URL+'/userlist'\r\n\r\nexport const REQUEST_ORDER = HOME_API_URL+'/list'\r\nexport const REQUEST_LINE_ITEMS = HOME_API_URL+'/linelist'\r\nexport const UPDATE_ORDER = HOME_API_URL+'/update'","import React, { Component } from 'react'\r\n\r\nclass UserComponent extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      customerName : \"Customer Name\"\r\n    }\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"brand-title mx-4\">\r\n        <h5>{this.state.customerName}</h5>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserComponent\r\n","import React, { Component } from 'react'\r\n\r\nclass SearchComponent extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      search : \"\"\r\n    }\r\n  }\r\n  handleChange = e =>{\r\n    this.setState({\r\n      search:e.target.value\r\n    })\r\n  }\r\n  triggerSearch = (e) =>{\r\n    e.preventDefault()\r\n    this.props.searchOrder(this.state.search)\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"tools-box w-50 mr-4 d-flex flex-row align-items-center\">\r\n        <form className=\"search-box\" onSubmit={(e)=>this.triggerSearch(e)}>\r\n            <div className=\"input-group input-group-sm\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Search here...\" value={this.state.search} onChange={this.handleChange}/>\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                        <i className=\"fas fa-search\"></i>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div className=\"user-box ml-4\">\r\n            <span className=\"user-avathar-link\">\r\n                <img alt=\"\" className=\"user-avathar img img-fluid\" src=\"./images/a5.png\"/>\r\n            </span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchComponent\r\n","import React, { Component } from 'react'\r\nimport ReactTable from \"react-table\"\r\nimport 'react-table/react-table.css'\r\n\r\nclass ListComponent extends Component{\r\n  render(){\r\n    const columns = [{\r\n      Header: 'Order No:',\r\n      accessor: 'ordernumber'\r\n    },{\r\n      Header: 'Date',\r\n      accessor: 'date',\r\n    },{\r\n      Header: 'Zip',\r\n      accessor: 'zip'\r\n    },{\r\n      Header: 'State',\r\n      accessor: 'state'\r\n    },{\r\n      Header: 'Created By',\r\n      accessor: 'createdBy'\r\n    },{\r\n      Header: 'Picked',\r\n      accessor: 'picked'\r\n    },{\r\n      Header: 'Shipped',\r\n      accessor: 'shipped'\r\n    }]\r\n    return (\r\n      <ReactTable\r\n        data={this.props.orders}\r\n        columns={columns}\r\n        style={{\r\n          height: \"100%\"\r\n        }}\r\n        showPagination={false}\r\n        className=\"-striped -highlight\"\r\n        getTrProps={(state, rowInfo) => {\r\n          if (rowInfo && rowInfo.row) {\r\n            return {\r\n              onClick: (e) => {\r\n                this.props.selectOrder(rowInfo.original)\r\n              },\r\n              style: {\r\n                background: rowInfo.original.ordernumber === (this.props.selectedOrder && this.props.selectedOrder.ordernumber) ? '#00afec' : 'white',\r\n                color: rowInfo.original.ordernumber === (this.props.selectedOrder && this.props.selectedOrder.ordernumber) ? 'white' : 'black'\r\n              }\r\n            }\r\n          }else{\r\n            return {}\r\n          }\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListComponent\r\n","import React, { Component } from 'react'\r\n\r\nclass DetailComponent extends Component{ \r\n  removeLineItem = (event, item) =>{\r\n    this.props.RemoveLineItems(this.props.selectedOrder, item)\r\n  }\r\n  editLineItem = (event, item) =>{\r\n    this.props.EditLineItems(item)\r\n  }\r\n  editItemUnits = (event, item) =>{\r\n    this.props.UpdateLineUnits(event.target.value, item)\r\n  }\r\n  saveLineUnits = (event, item) =>{\r\n    this.props.SaveLineUnits(this.props.selectedOrder, item)\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"scroller\">\r\n        { this.props.selectedOrder && this.props.selectedOrder.lineItems\r\n          && this.props.selectedOrder.lineItems.map((item, index) =>\r\n          <div className=\"card card-line-item mb-3\" key={index}>\r\n            <div className=\"card-body pb-2\">\r\n                <div className=\"card-title-box d-flex flex-row justify-content-between\">\r\n                    <label className=\"card-title\">NAME</label>\r\n                    <div className=\"actions-box\">\r\n                        {!item.editMode &&\r\n                          <span className=\"mr-3 icon-trash\" onClick={e => this.removeLineItem(e, item)}>\r\n                              <i className=\"fas fa-trash\"></i>\r\n                          </span>\r\n                        }\r\n                        {!item.editMode &&\r\n                          <span className=\"ml-3 icon-edit\" onClick={e => this.editLineItem(e, item)}>\r\n                              <i className=\"fas fa-edit\"></i>\r\n                          </span>\r\n                        }\r\n                        {item.editMode &&\r\n                          <span className=\"ml-3 icon-edit\" onClick={e => this.saveLineUnits(e, item)}>\r\n                              <i className=\"fas fa-save\"></i>\r\n                          </span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <form className=\"form app-form form-disabled mt-2\">\r\n                    <div className=\"form-group\">\r\n                        <label >UOM</label>\r\n                        <input type=\"text\" id=\"name\" className=\"form-control form-control-sm\" value={item.uom} disabled=\"true\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >COST</label>\r\n                        <input type=\"text\" id=\"cost\" className=\"form-control form-control-sm\" value={item.cost} disabled=\"true\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >UNITS</label>\r\n                        <input type=\"text\" id=\"units\" className=\"form-control form-control-sm\" onChange={(e)=>this.editItemUnits(e, item)}\r\n                        disabled={!item.editMode}  value={item.unit}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >DESCRIPTION</label>\r\n                        <textarea type=\"text\" id=\"description\" rows=\"3\" className=\"form-control form-control-sm\" value={item.desc} disabled=\"true\"></textarea>\r\n                    </div>\r\n                </form>\r\n            </div> \r\n          </div>\r\n          )\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DetailComponent\r\n","import React, { Component } from 'react'\r\n\r\nclass AddComponent extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      searchLine : \"\"\r\n    }\r\n  }\r\n  updateSearchLine = e =>{\r\n    this.setState({\r\n      searchLine:e.target.value\r\n    })\r\n  }\r\n  triggerLineSearch = (e) =>{\r\n    e.preventDefault()\r\n    this.props.searchLineItems(this.state.searchLine)\r\n  }\r\n  toggleSelectLine = (event, item) =>{\r\n    if(!item.selected){\r\n      this.props.SelectLineItems(this.props.selectedLines, item)\r\n    }\r\n    else{\r\n      this.props.UnSelectLineItems(this.props.selectedLines, item)\r\n    }\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"full-height\">\r\n        <form className=\"search-box w-100\" onSubmit={(e)=>this.triggerLineSearch(e)}>\r\n            <div className=\"input-group input-group-sm\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Search here...\" value={this.state.searchLine} onChange={this.updateSearchLine}/>\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                        <i className=\"fas fa-search\"></i>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <div className=\"add-list-elements\">\r\n          <ul className=\"list-group scroller\">\r\n            { this.props.lineItems && this.props.lineItems.map((item, index) =>\r\n              <li className=\"list-group-item d-flex flex-row align-items-center\" key={index} onClick={(e) => this.toggleSelectLine(e, item)}>\r\n                <div className=\"check-box\" >\r\n                  <i className={item.selected ? 'fas fa-check-square' : 'fas fa-square'}></i>\r\n                </div>\r\n                <div className=\"content-box\">\r\n                    <div className=\"item-name\">\r\n                        <label>Item Name: </label>\r\n                        <span>{item.uom}</span>\r\n                    </div>\r\n                    <div className=\"item-description\">\r\n                        <label className=\"w-100\"> \r\n                            Description:\r\n                        </label>\r\n                        <span className=\"text-justify\">\r\n                          {item.desc}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddComponent\r\n","import React, { Component } from 'react'\r\n\r\nimport DetailComponent from './detail.component'\r\nimport AddComponent from './add.component'\r\n\r\nclass LineItemComponent extends Component{\r\n    toggleLineItemMode = (event, mode) =>{\r\n        this.props.toggleLineItemMode(mode)\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"full-height\">\r\n                <div className=\"header py-3 px-3 mb-2 bg-white d-flex flex-row justify-content-between\">\r\n                    <div className=\"title-box\">\r\n                        <label className=\"title \">DETAILS - LINE ITEM</label>\r\n                    </div>\r\n                    <div className=\"actions-box\">\r\n                        <button type=\"button\" className=\"btn btn-sm icon-save\" \r\n                            onClick={(e) => this.toggleLineItemMode(e, !this.props.lineItemMode)}>\r\n                            <i className={this.props.lineItemMode ? 'fas fa-save' : 'fas fa-plus'}></i>\r\n                        </button>\r\n                    </div>\r\n                </div>     \r\n                <div className=\"item-area\">\r\n                    {!this.props.lineItemMode &&\r\n                        <DetailComponent \r\n                            selectedOrder={this.props.selectedOrder || (this.props.orders && this.props.orders[0])}\r\n                            RemoveLineItems={this.props.RemoveLineItems}\r\n                            EditLineItems={this.props.EditLineItems}\r\n                            UpdateLineUnits={this.props.UpdateLineUnits}\r\n                            SaveLineUnits={this.props.SaveLineUnits}>\r\n                        </DetailComponent>\r\n                    }\r\n                    {this.props.lineItemMode && \r\n                        <AddComponent \r\n                            lineItems={this.props.lineItems} \r\n                            searchLineItems={this.props.searchLineItems}\r\n                            selectedLines = {this.props.selectedLines}\r\n                            SelectLineItems = {this.props.SelectLineItems}\r\n                            UnSelectLineItems = {this.props.UnSelectLineItems}>\r\n                        </AddComponent>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LineItemComponent\r\n","import React, { Component }from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { \r\n  RequestOrders,\r\n  RequestLineItems,\r\n  SelectOrder,\r\n  SearchOrder,\r\n  ToggleLineItemMode,\r\n  SearchLineItems,\r\n  SelectLineItems,\r\n  UnSelectLineItems,\r\n  SaveLineItems,\r\n  RemoveLineItems,\r\n  EditLineItems,\r\n  UpdateLineUnits,\r\n  SaveLineUnits } from '../actions/home.actions'\r\n\r\nimport UserComponent from '../components/user.component'\r\nimport SearchComponent from '../components/search.component'\r\nimport ListComponent from '../components/list.component'\r\nimport LineItemComponent from '../components/lineitem.component'\r\n\r\nclass HomeComponent extends Component{\r\n  componentWillMount(){\r\n    this.props.RequestOrders()\r\n    this.props.RequestLineItems()\r\n  }\r\n  getFilteredList = () => {\r\n    if(this.props.orders){\r\n      if(this.props.searchText){\r\n        return this.props.orders.filter(order => order.ordernumber.toUpperCase().startsWith(this.props.searchText.toUpperCase()))\r\n      }\r\n      return this.props.orders\r\n    }\r\n    return []\r\n  }\r\n  getFilteredLineList = () => {\r\n    if(this.props.lineItems){\r\n      if(this.props.searchLine){\r\n        return this.props.lineItems.filter(line => line.uom.toUpperCase().startsWith(this.props.searchLine.toUpperCase()))\r\n      }\r\n      return this.props.lineItems\r\n    }\r\n    return []\r\n  }\r\n  toggleLineItemMode = (mode) =>{\r\n    if(!mode){\r\n      this.props.SaveLineItems(this.props.selectedOrder, this.props.selectedLines)\r\n    }\r\n    this.props.ToggleLineItemMode(mode)\r\n  }\r\n  render(){\r\n    return (\r\n      <div >\r\n        <div className=\"app-header\">\r\n          <div className=\"app-main-header\">\r\n            <div className=\"d-flex app-toolbar align-items-center justify-content-between\">\r\n              <UserComponent/>\r\n              <SearchComponent searchText={this.props.searchText} searchOrder={this.props.SearchOrder}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"app-main-content d-flex flex-row\">\r\n          <section className=\"content-left\">\r\n            <ListComponent orders={this.getFilteredList()} selectOrder={this.props.SelectOrder} selectedOrder={this.props.selectedOrder || (this.props.orders && this.props.orders[0])}/>\r\n          </section>\r\n          <section className=\"content-right d-flex flex-column border\">\r\n            <LineItemComponent \r\n              selectedOrder={this.props.selectedOrder || (this.props.orders && this.props.orders[0])}\r\n              lineItems={this.getFilteredLineList()}\r\n              toggleLineItemMode={this.toggleLineItemMode}\r\n              lineItemMode={this.props.lineItemMode}\r\n              searchLineItems={this.props.SearchLineItems}\r\n              RemoveLineItems={this.props.RemoveLineItems}\r\n              EditLineItems={this.props.EditLineItems}\r\n              UpdateLineUnits={this.props.UpdateLineUnits}\r\n              SaveLineUnits={this.props.SaveLineUnits}\r\n              \r\n              selectedLines = {this.props.selectedLines}\r\n              SelectLineItems = {this.props.SelectLineItems}\r\n              UnSelectLineItems = {this.props.UnSelectLineItems}/>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ...state.homeState.componentState\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  RequestOrders : RequestOrders(dispatch),\r\n  RequestLineItems : RequestLineItems(dispatch),\r\n  SelectOrder : SelectOrder(dispatch),\r\n  SearchOrder : SearchOrder(dispatch),\r\n  ToggleLineItemMode : ToggleLineItemMode(dispatch),\r\n  SearchLineItems : SearchLineItems(dispatch),\r\n  SaveLineItems : SaveLineItems(dispatch),\r\n  RemoveLineItems : RemoveLineItems(dispatch),\r\n  EditLineItems : EditLineItems(dispatch),\r\n  SelectLineItems : SelectLineItems(dispatch),\r\n  UnSelectLineItems : UnSelectLineItems(dispatch),\r\n  UpdateLineUnits : UpdateLineUnits(dispatch),\r\n  SaveLineUnits : SaveLineUnits(dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeComponent)","import { Http_Get, Http_Post } from '../utils/app.apis'\r\nimport { REQUEST_ORDER, REQUEST_LINE_ITEMS, UPDATE_ORDER } from '../constants/home.constants'\r\n\r\nexport const RequestOrders = dispatch => {\r\n  return () => {\r\n    dispatch ({\r\n      type:\"FETCH_ORDERS\"\r\n    })\r\n    Http_Get(REQUEST_ORDER)\r\n    .then(function(response) {\r\n      return response.json()\r\n    })\r\n    .then(function(response) {\r\n      dispatch ({\r\n        type:\"FETCH_ORDERS_SUCCESS\",\r\n        orders : response\r\n      })\r\n    })\r\n    .then(function(myJson) {\r\n      dispatch ({\r\n        type:\"FETCH_ORDERS_FAILURE\",\r\n        error : \"Error Message\"\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const RequestLineItems = dispatch => {\r\n  return () => {\r\n    dispatch ({\r\n      type:\"FETCH_LINE_ITEMS\"\r\n    })\r\n    Http_Get(REQUEST_LINE_ITEMS)\r\n    .then(function(response) {\r\n      return response.json()\r\n    })\r\n    .then(function(response) {\r\n      dispatch ({\r\n        type:\"FETCH_LINE_ITEMS_SUCCESS\",\r\n        lineItems : response\r\n      })\r\n    })\r\n    .then(function(myJson) {\r\n      dispatch ({\r\n        type:\"FETCH_LINE_ITEMS_FAILURE\",\r\n        error : \"Error Message\"\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const SelectOrder = dispatch => {\r\n  return order => {\r\n    dispatch ({\r\n      type:\"SELECT_ORDER\",\r\n      order : order\r\n    })\r\n  }\r\n}\r\n\r\nexport const ToggleLineItemMode = dispatch => {\r\n  return lineItemMode => {\r\n    dispatch ({\r\n      type:\"TOGGLE_LINE_ITEM_MODE\",\r\n      lineItemMode : lineItemMode\r\n    })\r\n  }\r\n}\r\n\r\nexport const SearchOrder = dispatch => {\r\n  return searchText => {\r\n    dispatch ({\r\n      type:\"SEARCH_ORDER\",\r\n      searchText : searchText\r\n    })\r\n  }\r\n}\r\n\r\nexport const SearchLineItems = dispatch => {\r\n  return searchLine => {\r\n    dispatch ({\r\n      type:\"SEARCH_LINE_ITEMS\",\r\n      searchLine : searchLine\r\n    })\r\n  }\r\n}\r\n\r\nexport const SelectLineItems = dispatch => {\r\n  return (selectedLines, item) => {\r\n    dispatch ({\r\n      type:\"SELECT_LINE_ITEMS\",\r\n      selectedLines: selectedLines,\r\n      item : item\r\n    })\r\n  }\r\n}\r\n\r\nexport const UnSelectLineItems = dispatch => {\r\n  return (selectedLines, item) => {\r\n    dispatch ({\r\n      type:\"UNSELECT_LINE_ITEMS\",\r\n      selectedLines: selectedLines,\r\n      item : item\r\n    })\r\n  }\r\n}\r\n\r\nexport const EditLineItems = dispatch => {\r\n  return (item) => {\r\n    dispatch ({\r\n      type:\"EDIT_LINE_ITEMS\",\r\n      item : item\r\n    })\r\n  }\r\n}\r\n\r\nexport const UpdateLineUnits = dispatch => {\r\n  return (unit, item) => {\r\n    dispatch ({\r\n      type:\"UPDATE_LINE_UNITS\",\r\n      unit : unit,\r\n      item : item\r\n    })\r\n  }\r\n}\r\n\r\nexport const SaveLineItems = dispatch => {\r\n  return (selectedOrder, selectedLines) => {\r\n    let lineItems = selectedOrder.lineItems.concat(selectedLines)\r\n    selectedOrder.lineItems = lineItems\r\n    dispatch ({\r\n      type:\"UPDATE_ORDER\"\r\n    })\r\n    Http_Post(UPDATE_ORDER, selectedOrder)\r\n    .then(function(response) {\r\n      return response.json()\r\n    })\r\n    .then(function(response) {\r\n      dispatch ({\r\n        type:\"UPDATE_ORDER_SUCCESS\",\r\n        success : response\r\n      })\r\n    })\r\n    .then(function(myJson) {\r\n      dispatch ({\r\n        type:\"UPDATE_ORDER_FAILURE\",\r\n        error : \"Error Message\"\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const SaveLineUnits = dispatch => {\r\n  return (selectedOrder, item) => {\r\n    selectedOrder.lineItems = selectedOrder.lineItems.map(line => {\r\n      if(line.productid === item.productid){\r\n        line = item\r\n      }\r\n      return line\r\n    })\r\n    dispatch ({\r\n      type:\"UPDATE_ORDER\"\r\n    })\r\n    Http_Post(UPDATE_ORDER, selectedOrder)\r\n    .then(function(response) {\r\n      return response.json()\r\n    })\r\n    .then(function(response) {\r\n      dispatch ({\r\n        type:\"UPDATE_ORDER_SUCCESS\",\r\n        success : response\r\n      })\r\n    })\r\n    .then(function(myJson) {\r\n      dispatch ({\r\n        type:\"UPDATE_ORDER_FAILURE\",\r\n        error : \"Error Message\"\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const RemoveLineItems = dispatch => {\r\n  return (selectedOrder, item) => {\r\n    selectedOrder.lineItems = selectedOrder.lineItems.filter(line => {\r\n      return line.productid !== item.productid\r\n    })\r\n    dispatch ({\r\n      type:\"UPDATE_ORDER\"\r\n    })\r\n    Http_Post(UPDATE_ORDER, selectedOrder)\r\n    .then(function(response) {\r\n      return response.json()\r\n    })\r\n    .then(function(response) {\r\n      dispatch ({\r\n        type:\"UPDATE_ORDER_SUCCESS\",\r\n        success : response\r\n      })\r\n    })\r\n    .then(function(myJson) {\r\n      dispatch ({\r\n        type:\"UPDATE_ORDER_FAILURE\",\r\n        error : \"Error Message\"\r\n      })\r\n    })\r\n  }\r\n}","import React from 'react'\r\nimport { Router, Route, Switch } from 'react-router'\r\nimport { createBrowserHistory } from 'history'\r\n\r\nimport HomeComponent from '../containers/home.component'\r\n\r\nconst history = createBrowserHistory()\r\nconst AppRoutes = (\r\n    <Router history={history} >\r\n        <Switch>\r\n            <Route path=\"/home\" component={HomeComponent} />\r\n            <Route component={HomeComponent} />\r\n        </Switch>\r\n    </Router>\r\n)\r\n\r\nexport default AppRoutes","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport AppRoutes from '../routes/app.routes'\n\n\nclass AppComponent extends Component {\n  render() {\n    return (\n      <div>\n          {AppRoutes}\n      </div>\n    )\n  }\n}\n\nexport default connect()(AppComponent)\n","import { combineReducers } from 'redux'\r\n\r\nconst ComponentReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n      case \"FETCH_ORDERS_SUCCESS\":\r\n        return {\r\n          ...state,\r\n          orders:action.orders, \r\n          selectedOrder:action.orders[0], \r\n          selectedLines:[]\r\n\r\n        }\r\n      case \"FETCH_LINE_ITEMS_SUCCESS\":\r\n        return {\r\n          ...state, lineItems:action.lineItems\r\n        }\r\n      case \"UPDATE_ORDER_SUCCESS\":\r\n        let orders = state.orders\r\n        let updatedOrder = state.selectedOrder\r\n        let lines = state.lineItems.map(line => {\r\n          line.selected = false\r\n          return line\r\n        })\r\n        orders.map(item => {\r\n          if(item.ordernumber === updatedOrder.ordernumber){\r\n            item = updatedOrder\r\n          }\r\n          let orderLines = item.lineItems.map(i => {\r\n            i.editMode = false\r\n            return i\r\n          })\r\n          item.lineItems = orderLines\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          orders:orders, \r\n          selectedOrder:updatedOrder,\r\n          lineItems:lines,\r\n          selectedLines:[],\r\n          lineItemMode:false\r\n        }   \r\n      case \"SELECT_ORDER\":\r\n        return {\r\n          ...state,\r\n          selectedOrder:action.order,\r\n          selectedLines:[],\r\n          lineItems:state.lineItems.map(line => {\r\n            line.selected = false\r\n            return line\r\n          })\r\n        }\r\n      case \"SEARCH_ORDER\":\r\n        return {\r\n          ...state, searchText:action.searchText\r\n        }\r\n      case \"SEARCH_LINE_ITEMS\":\r\n        return {\r\n          ...state, searchLine:action.searchLine\r\n        }\r\n      case \"TOGGLE_LINE_ITEM_MODE\":\r\n        return {\r\n          ...state, lineItemMode:action.lineItemMode\r\n        }   \r\n      case \"SELECT_LINE_ITEMS\":\r\n        let selectedItem = action.item\r\n        selectedItem.selected = true\r\n        return {\r\n          ...state,\r\n          selectedLines: [...state.selectedLines, selectedItem]\r\n        }\r\n      case \"UNSELECT_LINE_ITEMS\":\r\n        let lineItems = state.lineItems.map(line => {\r\n          if(line.productid === action.item.productid){\r\n            line.selected = false\r\n          }\r\n          return line\r\n        })\r\n        return {\r\n          ...state, lineItems : lineItems, selectedLines : state.selectedLines.filter(item => item.productid !== action.item.productid)\r\n        }\r\n      case \"SAVE_LINE_ITEMS\":\r\n        return {\r\n          ...state, selectedOrder:action.selectedOrder\r\n        }\r\n      case \"EDIT_LINE_ITEMS\":\r\n        let editLineItems = state.selectedOrder.lineItems.map(item => {\r\n          if(item.productid === action.item.productid){\r\n            item.editMode = true\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          selectedOrder: {\r\n            ...state.selectedOrder, lineItems: editLineItems\r\n          }\r\n        }      \r\n      case \"UPDATE_LINE_UNITS\":\r\n        let updateLineItems = state.selectedOrder.lineItems.map(item => {\r\n          if(item.productid === action.item.productid){\r\n            item.unit = action.unit\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          selectedOrder: {\r\n            ...state.selectedOrder, lineItems: updateLineItems\r\n          }\r\n        }\r\n      case \"REMOVE_LINE_ITEMS\":\r\n        return {\r\n          ...state, selectedOrder:action.selectedOrder\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nconst HomeReducer = combineReducers({\r\n  componentState : ComponentReducer,\r\n})\r\n\r\nexport default HomeReducer","import { combineReducers } from 'redux'\n\nimport HomeReducer from './home.reducer'\n\nconst AppReducer = combineReducers({\n  homeState : HomeReducer\n})\n\nexport default AppReducer\n","import thunk from 'redux-thunk'\r\nimport { createStore, applyMiddleware } from 'redux'\r\n\r\nimport AppReducer from '../reducers/app.reducer'\r\n\r\nconst middleware = [ thunk ]\r\nconst AppStore = createStore(\r\n    AppReducer,\r\n    applyMiddleware(...middleware)\r\n)\r\n\r\nexport default AppStore","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './styles/app.component.css';\n\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\n\nimport AppComponent from './containers/app.component'\nimport AppStore from './store/app.store'\n\nconst middleware = [ thunk ]\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger())\n}\n\nconst store = AppStore\n\nrender(\n  <Provider store={store}>\n    <AppComponent />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}