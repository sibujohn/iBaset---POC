{"version":3,"sources":["utils/app.apis.js","constants/home.constants.js","constants/app.constants.js","actions/home.actions.js","components/user.component.js","components/search.component.js","components/list.component.js","components/detail.component.js","components/add.component.js","components/lineitem.component.js","containers/home.component.js","routes/app.routes.js","containers/app.component.js","reducers/home.reducer.js","reducers/app.reducer.js","store/app.store.js","index.js"],"names":["Http_Get","url","fetch","Http_Put","data","method","body","JSON","stringify","headers","Content-Type","HOME_API_URL","UPDATE_ORDER","SearchCustomers","dispatch","searchObject","type","value","then","response","json","customers","myJson","error","ClearCustomers","UserComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","customerName","react_default","a","createElement","className","selectedCustomer","customername","Component","SearchComponent","selectCustomer","e","customer","customerSelected","_this$props","searchText","inputProps","placeholder","onChange","target","updateCustomerValue","textContent","dist_default","suggestions","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","customerid","renderSuggestion","onClick","alt","src","connect","_state$homeState$comp","homeState","componentState","ListComponent","sortOptions","label","onVirtualScroll","event","lazyLoadOrders","first","selectSort","selected","sort","filter","item","setState","selectedSort","sortLoadOrders","sortby","sorthow","selectOrder","order","_this2","dropdown","options","datatable","orders","scrollable","virtualScroll","virtualRowHeight","rows","totalRecords","orderOptions","records","lazy","selectionMode","selection","selectedOrder","onSelectionChange","loading","column","field","header","DetailComponent","removeLineItem","RemoveLineItems","editLineItem","EditLineItems","editItemUnits","UpdateLineUnits","saveLineUnits","SaveLineUnits","lineItems","map","index","key","editMode","id","uom","disabled","cost","unit","desc","AddComponent","updateSearchLine","stopPropagation","searchLine","triggerLineSearch","skip","limit","RequestLineItems","selectLines","SelectLineItems","selectedLines","docs","count","responsive","style","width","LineItemComponent","toggleLineItemMode","mode","lineItemMode","detail_component","add_component","HomeComponent","SaveLineItems","ToggleLineItemMode","UpdateCustomerValue","CustomerSelected","RequestOrders","showSpan","UpdateOrderOptions","sortParam","SelectOrder","user_component","search_component","list_component","lineitem_component","objectSpread","query","concat","success","line","productid","history","createBrowserHistory","AppRoutes","Router","Switch","Route","path","component","AppComponent","initialState","HomeReducer","combineReducers","arguments","length","undefined","action","orderOption","updatedOrder","ordernumber","orderLines","i","editLineItems","updateLineItems","AppReducer","middleware","thunk","AppStore","createStore","applyMiddleware","apply","store","render","es","containers_app_component","document","getElementById"],"mappings":"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","file":"static/js/main.0b4da827.chunk.js","sourcesContent":["export const Http_Get = (url) => fetch(url)\r\n\r\nexport const Http_Post = (url, data) => fetch(url, {\r\n  method: \"POST\",\r\n  body: JSON.stringify(data),\r\n  headers: {\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n})\r\n\r\nexport const Http_Put = (url, data) => fetch(url, {\r\n  method: \"PUT\",\r\n  body: JSON.stringify(data),\r\n  headers: {\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n})","import API_URL from './app.constants'\r\n\r\nconst HOME_API_URL = API_URL\r\n\r\nexport const SEARCH_CUSTOMER = HOME_API_URL+'/customer/search/'\r\nexport const REQUEST_ORDER = HOME_API_URL+'/order/bycustomer/'\r\nexport const REQUEST_LINE_ITEMS = HOME_API_URL+'/product/search'\r\nexport const UPDATE_ORDER = HOME_API_URL+'/order'","// const API_URL = 'https://private-5068a4-react21.apiary-mock.com'\r\nconst API_URL = 'http://localhost:4000/api'\r\nexport default API_URL","import { Http_Get, Http_Post, Http_Put } from '../utils/app.apis'\r\nimport { SEARCH_CUSTOMER, REQUEST_ORDER, REQUEST_LINE_ITEMS, UPDATE_ORDER } from '../constants/home.constants'\r\n\r\nexport const SearchCustomers = dispatch => {\r\n  return searchObject => {\r\n    dispatch ({\r\n      type:\"SEARCH_CUSTOMER\"\r\n    })\r\n    Http_Get(SEARCH_CUSTOMER+searchObject.value)\r\n    .then(function(response) {\r\n      return response.json()\r\n    })\r\n    .then(function(response) {\r\n      dispatch ({\r\n        type:\"SEARCH_CUSTOMER_SUCCESS\",\r\n        customers : response\r\n      })\r\n    })\r\n    .then(function(myJson) {\r\n      dispatch ({\r\n        type:\"SEARCH_CUSTOMER_FAILURE\",\r\n        error : \"Error Message\"\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const UpdateCustomerValue = dispatch => {\r\n  return searchText => {\r\n    dispatch ({\r\n      type: \"UPDATE_CUSTOMER_VALUE\",\r\n      searchText: searchText\r\n    })\r\n  }\r\n}\r\n\r\nexport const ClearCustomers = dispatch => {\r\n  return () => {\r\n    dispatch ({\r\n      type: \"CLEAR_CUSTOMERS\"\r\n    })\r\n  }\r\n}\r\n\r\nexport const UpdateCustomers = dispatch => {\r\n  return (customers, serarchValue) => {\r\n    dispatch ({\r\n      type: \"UPDATE_CUSTOMERS\",\r\n      customers,\r\n      serarchValue\r\n    })\r\n  }\r\n}\r\n\r\nexport const CustomerSelected = dispatch => {\r\n  return selectedCustomer => {\r\n    dispatch ({\r\n      type:\"CUSTOMER_SELECTED\",\r\n      selectedCustomer : selectedCustomer\r\n    })\r\n  }\r\n}\r\n\r\nexport const UpdateOrderOptions = (dispatch) => {\r\n  return (orderOptions, mode, showSpan, sortParam) => {\r\n    dispatch ({\r\n      type:\"UPDATE_ORDER_OPTIONS\",\r\n      orderOptions : orderOptions,\r\n      mode : mode,\r\n      showSpan : showSpan,\r\n      sortParam : sortParam\r\n    })\r\n  }\r\n}\r\n\r\nexport const RequestOrders = (dispatch) => {\r\n  return (selectedCustomer, orderOptions, selectedOrder) => {\r\n    dispatch ({\r\n      type:\"FETCH_ORDERS\"\r\n    })\r\n    let query = selectedCustomer.customerid\r\n    query += \"?skip=\"+orderOptions.skip\r\n    query += \"&limit=\"+orderOptions.limit\r\n    query += \"&sortby=\"+orderOptions.sortby\r\n    query += \"&sorthow=\"+orderOptions.sorthow\r\n    Http_Get(REQUEST_ORDER+query)\r\n    .then(function(response) {\r\n      return response.json()\r\n    })\r\n    .then(function(response) {\r\n      dispatch ({\r\n        type:\"FETCH_ORDERS_SUCCESS\",\r\n        orders : response,\r\n        selectedOrder:selectedOrder\r\n      })\r\n    })\r\n    .then(function(myJson) {\r\n      dispatch ({\r\n        type:\"FETCH_ORDERS_FAILURE\",\r\n        error : \"Error Message\"\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const RequestLineItems = dispatch => {\r\n  return (searchLine, options) => {\r\n    dispatch ({\r\n      type:\"FETCH_LINE_ITEMS\"\r\n    })    \r\n    let query = \"?\"\r\n    if(searchLine){\r\n      query += \"name=\"+searchLine+\"&\"\r\n    }\r\n    query += \"skip=\"+options.skip\r\n    query += \"&limit=\"+options.limit\r\n    Http_Get(REQUEST_LINE_ITEMS+query)\r\n    .then(function(response) {\r\n      return response.json()\r\n    })\r\n    .then(function(response) {\r\n      dispatch ({\r\n        type:\"FETCH_LINE_ITEMS_SUCCESS\",\r\n        lineItems : response,\r\n        searchLine, options\r\n      })\r\n    })\r\n    .then(function(myJson) {\r\n      dispatch ({\r\n        type:\"FETCH_LINE_ITEMS_FAILURE\",\r\n        error : \"Error Message\"\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const SelectOrder = dispatch => {\r\n  return order => {\r\n    dispatch ({\r\n      type:\"SELECT_ORDER\",\r\n      order : order\r\n    })\r\n  }\r\n}\r\n\r\nexport const ToggleLineItemMode = dispatch => {\r\n  return lineItemMode => {\r\n    dispatch ({\r\n      type:\"TOGGLE_LINE_ITEM_MODE\",\r\n      lineItemMode : lineItemMode\r\n    })\r\n  }\r\n}\r\n\r\nexport const SelectLineItems = dispatch => {\r\n  return (selectedLines, item) => {\r\n    dispatch ({\r\n      type:\"SELECT_LINE_ITEMS\",\r\n      selectedLines: selectedLines,\r\n      item : item\r\n    })\r\n  }\r\n}\r\n\r\nexport const EditLineItems = dispatch => {\r\n  return (item) => {\r\n    dispatch ({\r\n      type:\"EDIT_LINE_ITEMS\",\r\n      item : item\r\n    })\r\n  }\r\n}\r\n\r\nexport const UpdateLineUnits = dispatch => {\r\n  return (unit, item) => {\r\n    dispatch ({\r\n      type:\"UPDATE_LINE_UNITS\",\r\n      unit : unit,\r\n      item : item\r\n    })\r\n  }\r\n}\r\n\r\nexport const SaveLineItems = dispatch => {\r\n  return (selectedOrder, selectedLines) => {\r\n    let lineItems = selectedOrder.lineItems.concat(selectedLines)\r\n    selectedOrder.lineItems = lineItems\r\n    dispatch ({\r\n      type:\"UPDATE_ORDER\"\r\n    })\r\n    Http_Put(UPDATE_ORDER, selectedOrder)\r\n    .then(function(response) {\r\n      return response.json()\r\n    })\r\n    .then(function(response) {\r\n      dispatch ({\r\n        type:\"UPDATE_ORDER_SUCCESS\",\r\n        success : response\r\n      })\r\n    })\r\n    .then(function(myJson) {\r\n      dispatch ({\r\n        type:\"UPDATE_ORDER_FAILURE\",\r\n        error : \"Error Message\"\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const SaveLineUnits = dispatch => {\r\n  return (selectedOrder, item) => {\r\n    selectedOrder.lineItems = selectedOrder.lineItems.map(line => {\r\n      if(line.productid === item.productid){\r\n        line = item\r\n      }\r\n      return line\r\n    })\r\n    dispatch ({\r\n      type:\"UPDATE_ORDER\"\r\n    })\r\n    Http_Put(UPDATE_ORDER, selectedOrder)\r\n    .then(function(response) {\r\n      return response.json()\r\n    })\r\n    .then(function(response) {\r\n      dispatch ({\r\n        type:\"UPDATE_ORDER_SUCCESS\",\r\n        success : response\r\n      })\r\n    })\r\n    .then(function(myJson) {\r\n      dispatch ({\r\n        type:\"UPDATE_ORDER_FAILURE\",\r\n        error : \"Error Message\"\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const RemoveLineItems = dispatch => {\r\n  return (selectedOrder, item) => {\r\n    selectedOrder.lineItems = selectedOrder.lineItems.filter(line => {\r\n      return line.productid !== item.productid\r\n    })\r\n    dispatch ({\r\n      type:\"UPDATE_ORDER\"\r\n    })\r\n    Http_Put(UPDATE_ORDER, selectedOrder)\r\n    .then(function(response) {\r\n      return response.json()\r\n    })\r\n    .then(function(response) {\r\n      dispatch ({\r\n        type:\"UPDATE_ORDER_SUCCESS\",\r\n        success : response\r\n      })\r\n    })\r\n    .then(function(myJson) {\r\n      dispatch ({\r\n        type:\"UPDATE_ORDER_FAILURE\",\r\n        error : \"Error Message\"\r\n      })\r\n    })\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nclass UserComponent extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      customerName : \"Customer Name\"\r\n    }\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"brand-title mx-4\">\r\n        <span>Customer Lookup</span>\r\n        <h5>{this.props.selectedCustomer && this.props.selectedCustomer.customername}</h5>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserComponent\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Autosuggest from 'react-autosuggest';\r\n\r\nimport { SearchCustomers, ClearCustomers } from '../actions/home.actions'\r\n\r\nclass SearchComponent extends Component{\r\n\r\n  render(){\r\n    \r\n    const getCustomerValue = customer => {\r\n      return customer.customerid\r\n    }\r\n    const renderCustomer = customer => {\r\n      return (\r\n        <span onClick={(e)=>selectCustomer(e, customer)}>{customer.customername}</span>\r\n      );\r\n    }\r\n    const selectCustomer = (e, customer) =>{\r\n      this.props.customerSelected(customer)\r\n    }\r\n    const onCustomerValueChange = (e) => {\r\n      if(e.target && e.target.value){\r\n        this.props.updateCustomerValue(e.target.value)\r\n      }\r\n      else if(e.target && e.target.textContent){\r\n        this.props.updateCustomerValue(e.target.textContent)\r\n      }\r\n    }\r\n    const { searchText, customers, SearchCustomers, ClearCustomers } = this.props;\r\n    const inputProps = {\r\n      placeholder: \"Search customer..\",\r\n      value: searchText,\r\n      onChange: onCustomerValueChange\r\n    };\r\n    return (\r\n      <div className=\"tools-box w-50 mr-4 d-flex flex-row align-items-center\">\r\n        <div className=\"search-box\">\r\n            <div className=\"input-group input-group-sm\">\r\n              <Autosuggest \r\n                suggestions={customers}\r\n                onSuggestionsFetchRequested={SearchCustomers}\r\n                onSuggestionsClearRequested={ClearCustomers}\r\n                getSuggestionValue={getCustomerValue}\r\n                renderSuggestion={renderCustomer}\r\n                inputProps={inputProps}\r\n              />\r\n              <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">\r\n                      <i className=\"fas fa-search\"></i>\r\n                  </span>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"user-box ml-4\">\r\n            <span className=\"user-avathar-link\">\r\n                <img alt=\"\" className=\"user-avathar img img-fluid\" src=\"./images/a5.png\"/>\r\n            </span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { searchText, customers } = state.homeState.componentState;\r\n  return {\r\n    searchText,\r\n    customers\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  SearchCustomers : SearchCustomers(dispatch),\r\n  ClearCustomers : ClearCustomers(dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchComponent)\r\n","import React, { Component } from 'react'\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { DataTable } from 'primereact/datatable'\r\nimport { Column } from 'primereact/column'\r\n\r\nclass ListComponent extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      selectedSort : {label: 'Most Recent', value: 'desc'}\r\n    }\r\n  }\r\n  sortOptions = [\r\n    {label: 'Most Recent', value: 'desc'},\r\n    {label: 'Old', value: 'asc'}\r\n  ]\r\n  onVirtualScroll = (event) => {\r\n    this.props.lazyLoadOrders(event.first)\r\n  }\r\n  selectSort = (selected)=> {\r\n    let sort = this.sortOptions.filter(item => { return item.value === selected.value})\r\n    this.setState({selectedSort: sort[0]})\r\n    this.props.sortLoadOrders({sortby:'date', sorthow:selected.value})\r\n  }\r\n  selectOrder = (order) => {\r\n    this.props.selectOrder(order)\r\n  }\r\n  selectSort\r\n  render() {\r\n    return (\r\n      <div className=\"list-cover\">\r\n        <div className=\"sort-select\">\r\n          {this.props.selectedCustomer && \r\n            <Dropdown value={this.state.selectedSort.value} options={this.sortOptions}\r\n              onChange={this.selectSort}/>\r\n          }\r\n        </div>\r\n        <div className=\"list-table\">\r\n          <DataTable value={this.props.orders} scrollable={true} virtualScroll={true} virtualRowHeight={30}\r\n            rows={20} totalRecords={this.props.orderOptions.records} lazy={true} onVirtualScroll={this.onVirtualScroll}\r\n            selectionMode=\"single\" selection={this.props.selectedOrder}\r\n            onSelectionChange={e => this.selectOrder(e.value)} loading={this.props.orderOptions.loading}\r\n          >\r\n            <Column field=\"ordernumber\" header=\"Order Number\" />\r\n            <Column field=\"date\" header=\"Date\" />\r\n            <Column field=\"zip\" header=\"ZIP\" />\r\n            <Column field=\"state\" header=\"State\" />\r\n            <Column field=\"createdBy\" header=\"Created By\" />\r\n            <Column field=\"picked\" header=\"Pickked\" />\r\n            <Column field=\"shipped\" header=\"Shipped\" />\r\n          </DataTable>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListComponent\r\n","import React, { Component } from 'react'\r\n\r\nclass DetailComponent extends Component{ \r\n  removeLineItem = (event, item) =>{\r\n    this.props.RemoveLineItems(this.props.selectedOrder, item)\r\n  }\r\n  editLineItem = (event, item) =>{\r\n    this.props.EditLineItems(item)\r\n  }\r\n  editItemUnits = (event, item) =>{\r\n    this.props.UpdateLineUnits(event.target.value, item)\r\n  }\r\n  saveLineUnits = (event, item) =>{\r\n    this.props.SaveLineUnits(this.props.selectedOrder, item)\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"full-height scroller\">\r\n        { this.props.selectedOrder && this.props.selectedOrder.lineItems\r\n          && this.props.selectedOrder.lineItems.map((item, index) =>\r\n          <div className=\"card card-line-item mb-3\" key={index}>\r\n            <div className=\"card-body pb-2\">\r\n                <div className=\"card-title-box d-flex flex-row justify-content-between\">\r\n                    <label className=\"card-title\">NAME</label>\r\n                    <div className=\"actions-box\">\r\n                        {!item.editMode &&\r\n                          <span className=\"mr-3 icon-trash\" onClick={e => this.removeLineItem(e, item)}>\r\n                              <i className=\"fas fa-trash\"></i>\r\n                          </span>\r\n                        }\r\n                        {!item.editMode &&\r\n                          <span className=\"ml-3 icon-edit\" onClick={e => this.editLineItem(e, item)}>\r\n                              <i className=\"fas fa-edit\"></i>\r\n                          </span>\r\n                        }\r\n                        {item.editMode &&\r\n                          <span className=\"ml-3 icon-edit\" onClick={e => this.saveLineUnits(e, item)}>\r\n                              <i className=\"fas fa-save\"></i>\r\n                          </span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <form className=\"form app-form form-disabled mt-2\">\r\n                    <div className=\"form-group\">\r\n                        <label >UOM</label>\r\n                        <input type=\"text\" id=\"name\" className=\"form-control form-control-sm\" value={item.uom} disabled=\"true\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >COST</label>\r\n                        <input type=\"text\" id=\"cost\" className=\"form-control form-control-sm\" value={item.cost} disabled=\"true\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >UNITS</label>\r\n                        <input type=\"text\" id=\"units\" className=\"form-control form-control-sm\" onChange={(e)=>this.editItemUnits(e, item)}\r\n                        disabled={!item.editMode}  value={item.unit}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >DESCRIPTION</label>\r\n                        <textarea type=\"text\" id=\"description\" rows=\"3\" className=\"form-control form-control-sm\" value={item.desc} disabled=\"true\"></textarea>\r\n                    </div>\r\n                </form>\r\n            </div> \r\n          </div>\r\n          )\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DetailComponent\r\n","import React, { Component } from 'react'\r\nimport { DataTable } from 'primereact/datatable'\r\nimport { Column } from 'primereact/column'\r\n\r\nclass AddComponent extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      searchLine : \"\"\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.props.RequestLineItems(this.state.searchLine, {skip:0, limit:10})\r\n  }\r\n  updateSearchLine = event =>{\r\n    event.stopPropagation()\r\n    this.setState({\r\n      searchLine:event.target.value\r\n    })\r\n    this.triggerLineSearch(event.target.value, {skip:0, limit:10})\r\n  }\r\n  triggerLineSearch = (value, options) =>{\r\n    this.props.RequestLineItems(value, options)\r\n  }\r\n  onVirtualScroll = (event) => {\r\n    this.props.RequestLineItems(this.state.searchLine, {skip:event.first, limit:event.rows})\r\n  }\r\n  selectLines = (selected) => {\r\n    this.props.SelectLineItems(this.props.selectedLines, selected)\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"full-height\">\r\n        <div className=\"search-box w-100\" >\r\n            <div className=\"input-group input-group-sm\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Search lineitem...\" value={this.state.searchLine} onChange={this.updateSearchLine}/>\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                        <i className=\"fas fa-search\"></i>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"add-list-elements\">\r\n        <DataTable value={this.props.lineItems.docs} scrollable={true} virtualScroll={true} virtualRowHeight={30}\r\n            rows={10} totalRecords={this.props.lineItems.count} lazy={true} onVirtualScroll={this.onVirtualScroll}\r\n            selection={this.props.selectedLines} responsive={true}\r\n            onSelectionChange={e => this.selectLines(e.value)} loading={this.props.lineItems.loading}\r\n          >\r\n            <Column selectionMode=\"multiple\" style={{width:'3em'}}/>\r\n            <Column field=\"productName\" header=\"Product Name\" />\r\n            <Column field=\"desc\" header=\"Description\" />\r\n          </DataTable>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddComponent\r\n","import React, { Component } from 'react'\r\n\r\nimport DetailComponent from './detail.component'\r\nimport AddComponent from './add.component'\r\n\r\nclass LineItemComponent extends Component{\r\n    toggleLineItemMode = (event, mode) =>{\r\n        this.props.toggleLineItemMode(mode)\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"full-height\">\r\n                <div className=\"header py-3 px-3 mb-2 bg-white d-flex flex-row justify-content-between\">\r\n                    <div className=\"title-box\">\r\n                        <label className=\"title \">DETAILS - LINE ITEM</label>\r\n                    </div>\r\n                    <div className=\"actions-box\">\r\n                        { this.props.selectedOrder && \r\n                            <button type=\"button\" className=\"btn btn-sm icon-save\" \r\n                                onClick={(e) => this.toggleLineItemMode(e, !this.props.lineItemMode)}>\r\n                                <i className={this.props.lineItemMode ? 'fas fa-save' : 'fas fa-plus'}></i>\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                </div>     \r\n                <div className=\"item-area\">\r\n                    {!this.props.lineItemMode &&\r\n                        <DetailComponent \r\n                            selectedOrder={this.props.selectedOrder || (this.props.orders && this.props.orders[0])}\r\n                            RemoveLineItems={this.props.RemoveLineItems}\r\n                            EditLineItems={this.props.EditLineItems}\r\n                            UpdateLineUnits={this.props.UpdateLineUnits}\r\n                            SaveLineUnits={this.props.SaveLineUnits}>\r\n                        </DetailComponent>\r\n                    }\r\n                    {this.props.lineItemMode && \r\n                        <AddComponent \r\n                            lineItems={this.props.lineItems} \r\n                            selectedLines = {this.props.selectedLines}\r\n                            RequestLineItems = {this.props.RequestLineItems}\r\n                            SelectLineItems = {this.props.SelectLineItems}>\r\n                        </AddComponent>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LineItemComponent\r\n","import React, { Component }from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { \r\n  UpdateCustomerValue,\r\n  SearchCustomers,\r\n  ClearCustomers,\r\n  CustomerSelected,\r\n  RequestOrders,\r\n  UpdateOrderOptions,\r\n  RequestLineItems,\r\n  SelectOrder,\r\n  ToggleLineItemMode,\r\n  SelectLineItems,\r\n  SaveLineItems,\r\n  RemoveLineItems,\r\n  EditLineItems,\r\n  UpdateLineUnits,\r\n  SaveLineUnits } from '../actions/home.actions'\r\n\r\nimport UserComponent from '../components/user.component'\r\nimport SearchComponent from '../components/search.component'\r\nimport ListComponent from '../components/list.component'\r\nimport LineItemComponent from '../components/lineitem.component'\r\n\r\nclass HomeComponent extends Component{\r\n  toggleLineItemMode = (mode) => {\r\n    if(!mode){\r\n      this.props.SaveLineItems(this.props.selectedOrder, this.props.selectedLines)\r\n    }\r\n    this.props.ToggleLineItemMode(mode)\r\n  }\r\n  updateCustomerValue = (value) => {\r\n    this.props.UpdateCustomerValue(value)\r\n  }\r\n  customerSelected = (customer) => {\r\n    this.props.UpdateCustomerValue(customer.customername)\r\n    this.props.CustomerSelected(customer)\r\n    this.props.RequestOrders(customer, this.props.orderOptions)\r\n  }\r\n  lazyLoadOrders = (showSpan) =>{\r\n    this.props.UpdateOrderOptions(this.props.orderOptions, 'lazy', showSpan, null)\r\n    this.props.RequestOrders( this.props.selectedCustomer, this.props.orderOptions, this.props.selectedOrder)\r\n  }\r\n  sortLoadOrders = (sortParam) =>{\r\n    this.props.UpdateOrderOptions(this.props.orderOptions, 'sort', null, sortParam)\r\n    this.props.RequestOrders( this.props.selectedCustomer, this.props.orderOptions, this.props.selectedOrder)\r\n  }\r\n  selectOrder = (selected) => {\r\n    this.props.SelectOrder(selected)\r\n  }\r\n  render(){\r\n    return (\r\n      <div >\r\n        <div className=\"app-header\">\r\n          <div className=\"app-main-header\">\r\n            <div className=\"d-flex app-toolbar align-items-center justify-content-between\">\r\n              <UserComponent selectedCustomer={this.props.selectedCustomer}/>\r\n              <SearchComponent\r\n                searchText={this.props.searchText}\r\n                customers={this.props.customers}\r\n                updateCustomerValue={this.updateCustomerValue}\r\n                SearchCustomers={this.props.SearchCustomers}\r\n                ClearCustomers={this.props.ClearCustomers}\r\n                customerSelected={this.customerSelected}\r\n                />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"app-main-content d-flex flex-row\">\r\n          <section className=\"content-left\">\r\n            <ListComponent orders={this.props.orders} selectOrder={this.props.SelectOrder}\r\n              selectedOrder={this.props.selectedOrder || (this.props.orders && this.props.orders[0])}\r\n              lazyLoadOrders={this.lazyLoadOrders} orderOptions={this.props.orderOptions}\r\n              sortLoadOrders={this.sortLoadOrders} selectedCustomer={this.props.selectedCustomer}/>\r\n          </section>\r\n          <section className=\"content-right d-flex flex-column border\">\r\n            <LineItemComponent \r\n              selectedOrder={this.props.selectedOrder || (this.props.orders && this.props.orders[0])}\r\n              lineItems={this.props.lineItems}\r\n              toggleLineItemMode={this.toggleLineItemMode}\r\n              lineItemMode={this.props.lineItemMode}\r\n              RequestLineItems ={this.props.RequestLineItems}\r\n              RemoveLineItems={this.props.RemoveLineItems}\r\n              EditLineItems={this.props.EditLineItems}\r\n              UpdateLineUnits={this.props.UpdateLineUnits}\r\n              SaveLineUnits={this.props.SaveLineUnits}\r\n              \r\n              selectedLines = {this.props.selectedLines}\r\n              SelectLineItems = {this.props.SelectLineItems}/>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ...state.homeState.componentState\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  UpdateCustomerValue : UpdateCustomerValue(dispatch),\r\n  SearchCustomers : SearchCustomers(dispatch),\r\n  ClearCustomers : ClearCustomers(dispatch),\r\n  CustomerSelected : CustomerSelected(dispatch),\r\n  RequestOrders : RequestOrders(dispatch),\r\n  UpdateOrderOptions: UpdateOrderOptions(dispatch),\r\n  RequestLineItems : RequestLineItems(dispatch),\r\n  SelectOrder : SelectOrder(dispatch),\r\n  ToggleLineItemMode : ToggleLineItemMode(dispatch),\r\n  SaveLineItems : SaveLineItems(dispatch),\r\n  RemoveLineItems : RemoveLineItems(dispatch),\r\n  EditLineItems : EditLineItems(dispatch),\r\n  SelectLineItems : SelectLineItems(dispatch),\r\n  UpdateLineUnits : UpdateLineUnits(dispatch),\r\n  SaveLineUnits : SaveLineUnits(dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeComponent)","import React from 'react'\r\nimport { Router, Route, Switch } from 'react-router'\r\nimport { createBrowserHistory } from 'history'\r\n\r\nimport HomeComponent from '../containers/home.component'\r\n\r\nconst history = createBrowserHistory()\r\nconst AppRoutes = (\r\n    <Router history={history} >\r\n        <Switch>\r\n            <Route path=\"/home\" component={HomeComponent} />\r\n            <Route component={HomeComponent} />\r\n        </Switch>\r\n    </Router>\r\n)\r\n\r\nexport default AppRoutes","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\nimport AppRoutes from '../routes/app.routes'\n\n\nclass AppComponent extends Component {\n  render() {\n    return (\n      <div>\n          {AppRoutes}\n      </div>\n    )\n  }\n}\n\nexport default connect()(AppComponent)\n","import { combineReducers } from 'redux'\r\n\r\nconst initialState = {\r\n  searchText: '',\r\n  customers: [],\r\n  selectedCustomer:null,\r\n  orders:[],\r\n  orderOptions: {\r\n    skip:0,\r\n    limit:20,\r\n    records:0,\r\n    sortby:\"date\",\r\n    sorthow:\"desc\",\r\n    loading:false\r\n  },\r\n  selectedOrder:null,\r\n  lineItems:{},\r\n  lineItemMode:false,\r\n  selectedLines:[]\r\n};\r\n\r\nconst ComponentReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case \"SEARCH_CUSTOMER_SUCCESS\":\r\n        return {\r\n          ...state,\r\n          customers:action.customers\r\n        }\r\n      case \"UPDATE_CUSTOMER_VALUE\":\r\n        return {\r\n          ...state,\r\n          searchText: action.searchText\r\n        };\r\n      case \"CLEAR_CUSTOMERS\":\r\n        return {\r\n          ...state,\r\n          customers: []\r\n        };\r\n\r\n      case \"'UPDATE_CUSTOMERS\":\r\n        if (action.searchText !== state.searchText) {\r\n          return {\r\n            ...state\r\n          };\r\n        }\r\n        return {\r\n          ...state,\r\n          customers: action.customers\r\n        };\r\n      case \"CUSTOMER_SELECTED\":\r\n        return {\r\n          ...state,\r\n          selectedCustomer:action.selectedCustomer,\r\n          selectedLines : []\r\n        }\r\n      case \"FETCH_ORDERS_SUCCESS\":\r\n        let orderOptions = state.orderOptions\r\n        orderOptions.records = action.orders.count\r\n        orderOptions.loading = false\r\n        return {\r\n          ...state,\r\n          orders:action.orders.docs, \r\n          selectedOrder:(action.selectedOrder) ? action.selectedOrder : action.orders.docs[0], \r\n          orderOptions:orderOptions\r\n        }\r\n      case \"UPDATE_ORDER_OPTIONS\":\r\n        let orderOption = action.orderOptions\r\n        if(action.mode === 'lazy'){\r\n          orderOption.skip = action.showSpan\r\n        }\r\n        else if(action.mode === 'sort'){\r\n          orderOption.sortby = action.sortParam.sortby\r\n          orderOption.sorthow = action.sortParam.sorthow\r\n          orderOption.skip = 0\r\n        }\r\n        orderOption.loading = true;\r\n        return {\r\n          ...state,\r\n          orderOptions:orderOption\r\n        }\r\n      case \"FETCH_LINE_ITEMS_SUCCESS\":\r\n        return {\r\n          ...state, lineItems:action.lineItems\r\n        }\r\n      case \"UPDATE_ORDER_SUCCESS\":\r\n        let orders = state.orders\r\n        let updatedOrder = state.selectedOrder\r\n        orders.map(item => {\r\n          if(item.ordernumber === updatedOrder.ordernumber){\r\n            item = updatedOrder\r\n          }\r\n          let orderLines = item.lineItems.map(i => {\r\n            i.editMode = false\r\n            return i\r\n          })\r\n          item.lineItems = orderLines\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          orders:orders, \r\n          selectedOrder:updatedOrder,\r\n          selectedLines:[],\r\n          lineItemMode:false\r\n        }   \r\n      case \"SELECT_ORDER\":\r\n        return {\r\n          ...state,\r\n          selectedOrder:action.order,\r\n          selectedLines:[]\r\n        }\r\n      case \"SEARCH_ORDER\":\r\n        return {\r\n          ...state, searchText:action.searchText\r\n        }\r\n      case \"SEARCH_LINE_ITEMS\":\r\n        return {\r\n          ...state, searchLine:action.searchLine\r\n        }\r\n      case \"TOGGLE_LINE_ITEM_MODE\":\r\n        return {\r\n          ...state, lineItemMode:action.lineItemMode\r\n        }   \r\n      case \"SELECT_LINE_ITEMS\":\r\n        return {\r\n          ...state, selectedLines:action.item\r\n        }\r\n      case \"UNSELECT_LINE_ITEMS\":\r\n        let lineItems = state.lineItems.map(line => {\r\n          if(line.productid === action.item.productid){\r\n            line.selected = false\r\n          }\r\n          return line\r\n        })\r\n        return {\r\n          ...state, lineItems : lineItems, selectedLines : state.selectedLines.filter(item => item.productid !== action.item.productid)\r\n        }\r\n      case \"SAVE_LINE_ITEMS\":\r\n        return {\r\n          ...state, selectedOrder:action.selectedOrder\r\n        }\r\n      case \"EDIT_LINE_ITEMS\":\r\n        let editLineItems = state.selectedOrder.lineItems.map(item => {\r\n          if(item.productid === action.item.productid){\r\n            item.editMode = true\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          selectedOrder: {\r\n            ...state.selectedOrder, lineItems: editLineItems\r\n          }\r\n        }      \r\n      case \"UPDATE_LINE_UNITS\":\r\n        let updateLineItems = state.selectedOrder.lineItems.map(item => {\r\n          if(item.productid === action.item.productid){\r\n            item.unit = action.unit\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          selectedOrder: {\r\n            ...state.selectedOrder, lineItems: updateLineItems\r\n          }\r\n        }\r\n      case \"REMOVE_LINE_ITEMS\":\r\n        return {\r\n          ...state, selectedOrder:action.selectedOrder\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nconst HomeReducer = combineReducers({\r\n  componentState : ComponentReducer,\r\n})\r\n\r\nexport default HomeReducer","import { combineReducers } from 'redux'\n\nimport HomeReducer from './home.reducer'\n\nconst AppReducer = combineReducers({\n  homeState : HomeReducer\n})\n\nexport default AppReducer\n","import thunk from 'redux-thunk'\r\nimport { createStore, applyMiddleware } from 'redux'\r\n\r\nimport AppReducer from '../reducers/app.reducer'\r\n\r\nconst middleware = [ thunk ]\r\nconst AppStore = createStore(\r\n    AppReducer,\r\n    applyMiddleware(...middleware)\r\n)\r\n\r\nexport default AppStore","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './styles/app.component.css';\n\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\n\nimport AppComponent from './containers/app.component'\nimport AppStore from './store/app.store'\n\nconst middleware = [ thunk ]\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger())\n}\n\nconst store = AppStore\n\nrender(\n  <Provider store={store}>\n    <AppComponent />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}